concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }} @ ${{ github.ref || github.run_id }}
jobs:
  Matrix-Setup:
    outputs:
      jdk: ${{ steps.setup-matrix-jdk.outputs.jdk }}
      os: ${{ steps.setup-matrix-os.outputs.os }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      id: setup-matrix-jdk
      run: echo 'jdk=[${{ inputs.MATRIX_JDK }}]' >> $GITHUB_OUTPUT
    - continue-on-error: true
      id: setup-matrix-os
      run: echo 'os=[${{ inputs.MATRIX_OS }}]' >> $GITHUB_OUTPUT
  Test-build-default-matrix:
    name: BUILD DEFAULT - JDK${{ matrix.jdk }} - ${{ matrix.os }}
    needs: Matrix-Setup
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        path: quickstarts
    - continue-on-error: true
      name: Set up JDK ${{ matrix.jdk }}
      uses: actions/setup-java@v4
      with:
        cache: maven
        distribution: temurin
        java-version: ${{ matrix.jdk }}
    - continue-on-error: true
      env:
        FILE: ./quickstarts/.github/workflows/quickstart_${{ inputs.QUICKSTART_PATH
          }}_ci_before.sh
      name: Run before script
      run: "if test -f $FILE;\n  then\n    chmod +x $FILE\n    bash $FILE\nfi\n"
      shell: bash
    - continue-on-error: true
      name: Build ${{ inputs.QUICKSTART_PATH }} Quickstart for Release
      run: 'cd quickstarts

        cd ${{ inputs.QUICKSTART_PATH }}

        mvn -fae clean package -Drelease

        '
      shell: bash
    - continue-on-error: true
      if: ${{ inputs.TEST_PROVISIONED_SERVER }}
      name: Build, run & test ${{ inputs.QUICKSTART_PATH }} Quickstart with provisioned-server
        profile
      run: "cd quickstarts\ncd ${{ inputs.QUICKSTART_PATH }}\necho \"Building provisioned\
        \ server...\"\nmvn -fae clean ${{ inputs.MVN_COMMAND }} -Pprovisioned-server\n\
        echo \"Add quickstartUser...\"\n${{ inputs.DEPLOYMENT_DIR }}/target/server/bin/add-user.sh\
        \ -a -u 'quickstartUser' -p 'quickstartPwd1!' -g 'guest,user,JBossAdmin,Users'\n\
        echo \"Add quickstartAdmin...\"\n${{ inputs.DEPLOYMENT_DIR }}/target/server/bin/add-user.sh\
        \ -a -u 'quickstartAdmin' -p 'adminPwd1!' -g 'guest,user,admin'\necho \"Starting\
        \ provisioned server...\"\nmvn -f ${{ inputs.DEPLOYMENT_DIR }}/pom.xml wildfly:start\
        \ -DjbossHome=${{ inputs.DEPLOYMENT_DIR }}/target/server -Dstartup-timeout=120\
        \ ${{ inputs.EXTRA_RUN_ARGS }}\necho \"Testing provisioned server...\"\nmvn\
        \ -fae verify -Dserver.host=${{ inputs.SERVER_PROVISIONING_SERVER_HOST }}\
        \ -Pintegration-testing \necho \"Shutting down provisioned server...\"\nmvn\
        \ -f ${{ inputs.DEPLOYMENT_DIR }}/pom.xml wildfly:shutdown\n"
      shell: bash
    - continue-on-error: true
      if: ${{ inputs.TEST_BOOTABLE_JAR }}
      name: Build, run & test ${{ inputs.QUICKSTART_PATH }} Quickstart with bootable-jar
        profile
      run: "cd quickstarts\ncd ${{ inputs.QUICKSTART_PATH }}\necho \"Building bootable\
        \ jar...\"\nmvn -fae clean ${{ inputs.MVN_COMMAND }} -Pbootable-jar\necho\
        \ \"Starting bootable jar...\"\nmvn -f ${{ inputs.DEPLOYMENT_DIR }}/pom.xml\
        \ wildfly-jar:start -Djar-file-name=${{ inputs.DEPLOYMENT_DIR }}/target/${{\
        \ inputs.QUICKSTART_PATH }}-bootable.jar -Dstartup-timeout=120 ${{ inputs.EXTRA_RUN_ARGS\
        \ }}\necho \"Testing bootable jar...\"\nmvn -fae verify -Dserver.host=${{\
        \ inputs.SERVER_PROVISIONING_SERVER_HOST }} -Pintegration-testing\necho \"\
        Shutting down bootable jar...\"          \nmvn -f ${{ inputs.DEPLOYMENT_DIR\
        \ }}/pom.xml wildfly-jar:shutdown\n"
      shell: bash
    - continue-on-error: true
      if: ${{ inputs.TEST_OPENSHIFT }}
      name: Build ${{ inputs.QUICKSTART_PATH }} Quickstart with openshift profile
      run: 'cd quickstarts

        cd ${{ inputs.QUICKSTART_PATH }}

        mvn -fae clean package -Popenshift

        '
      shell: bash
    - continue-on-error: true
      env:
        FILE: ./quickstarts/.github/workflows/quickstart_${{ inputs.QUICKSTART_PATH
          }}_ci_after.sh
      name: Run after script
      run: "if test -f $FILE;\n  then\n    chmod +x $FILE\n    bash $FILE\nfi\n"
      shell: bash
    - continue-on-error: true
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: surefire-reports-JDK${{ matrix.jdk }}-${{ matrix.os }}
        path: quickstarts/${{ inputs.QUICKSTART_PATH }}/**/surefire-reports/*.txt
    strategy:
      fail-fast: false
      matrix:
        jdk: ${{ fromJSON(needs.Matrix-Setup.outputs.jdk) }}
        os: ${{ fromJSON(needs.Matrix-Setup.outputs.os) }}
  Test-build-with-deps-matrix:
    name: BUILD WITH DEPS - JDK${{ matrix.jdk }} - ${{ matrix.os }}
    needs:
    - Matrix-Setup
    - WildFly-build
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        path: quickstarts
    - continue-on-error: true
      uses: actions/download-artifact@v4
      with:
        name: wildfly-maven-repository
        path: .
    - continue-on-error: true
      name: Extract Maven Repo
      run: tar -xzf wildfly-maven-repository.tar.gz -C ~
      shell: bash
    - continue-on-error: true
      name: Set up JDK ${{ matrix.jdk }}
      uses: actions/setup-java@v4
      with:
        cache: maven
        distribution: temurin
        java-version: ${{ matrix.jdk }}
    - continue-on-error: true
      env:
        FILE: ./quickstarts/.github/workflows/quickstart_${{ inputs.QUICKSTART_PATH
          }}_ci_before.sh
      name: Run before script
      run: "if test -f $FILE;\n  then\n    chmod +x $FILE\n    bash $FILE\nfi\n"
      shell: bash
    - continue-on-error: true
      name: Build Quickstart for Release with built Server version
      run: 'cd quickstarts

        cd ${{ inputs.QUICKSTART_PATH }}

        mvn -fae clean package -Drelease -Dversion.server=${{ needs.wildfly-build.outputs.wildfly-version
        }}

        '
      shell: bash
    - continue-on-error: true
      if: ${{ inputs.TEST_PROVISIONED_SERVER }}
      name: Build, run & test ${{ inputs.QUICKSTART_PATH }} Quickstart with provisioned-server
        profile, and built Server version
      run: 'cd quickstarts

        cd ${{ inputs.QUICKSTART_PATH }}

        echo "Building provisioned server..."

        mvn -fae clean ${{ inputs.MVN_COMMAND }} -Pprovisioned-server -Dversion.server=${{
        needs.wildfly-build.outputs.wildfly-version }}

        echo "Add quickstartUser..."

        ${{ inputs.DEPLOYMENT_DIR }}/target/server/bin/add-user.sh -a -u ''quickstartUser''
        -p ''quickstartPwd1!'' -g ''guest,user,JBossAdmin,Users''

        echo "Add quickstartAdmin..."

        ${{ inputs.DEPLOYMENT_DIR }}/target/server/bin/add-user.sh -a -u ''quickstartAdmin''
        -p ''adminPwd1!'' -g ''guest,user,admin''

        echo "Starting provisioned server..."

        mvn -f ${{ inputs.DEPLOYMENT_DIR }}/pom.xml wildfly:start -DjbossHome=${{
        inputs.DEPLOYMENT_DIR }}/target/server -Dstartup-timeout=120 ${{ inputs.EXTRA_RUN_ARGS
        }}

        echo "Testing provisioned server..."

        mvn -fae verify -Dserver.host=${{ inputs.SERVER_PROVISIONING_SERVER_HOST }}
        -Pintegration-testing

        echo "Shutting down provisioned server..."

        mvn -f ${{ inputs.DEPLOYMENT_DIR }}/pom.xml wildfly:shutdown

        '
      shell: bash
    - continue-on-error: true
      if: ${{ inputs.TEST_BOOTABLE_JAR }}
      name: Build, run & test ${{ inputs.QUICKSTART_PATH }} Quickstart with bootable-jar
        profile, and built Server version
      run: "cd quickstarts\ncd ${{ inputs.QUICKSTART_PATH }}\necho \"Building bootable\
        \ jar...\"\nmvn -fae clean ${{ inputs.MVN_COMMAND }} -Pbootable-jar -Dversion.server=${{\
        \ needs.wildfly-build.outputs.wildfly-version }}\necho \"Starting bootable\
        \ jar...\"\nmvn -f ${{ inputs.DEPLOYMENT_DIR }}/pom.xml wildfly-jar:start\
        \ -Djar-file-name=${{ inputs.DEPLOYMENT_DIR }}/target/${{ inputs.QUICKSTART_PATH\
        \ }}-bootable.jar -Dstartup-timeout=120 ${{ inputs.EXTRA_RUN_ARGS }}\necho\
        \ \"Testing bootable jar...\"\nmvn -fae verify -Dserver.host=${{ inputs.SERVER_PROVISIONING_SERVER_HOST\
        \ }} -Pintegration-testing\necho \"Shutting down bootable jar...\"       \
        \   \nmvn -f ${{ inputs.DEPLOYMENT_DIR }}/pom.xml wildfly-jar:shutdown\n"
      shell: bash
    - continue-on-error: true
      if: ${{ inputs.TEST_OPENSHIFT }}
      name: Build ${{ inputs.QUICKSTART_PATH }} Quickstart with openshift profile,
        and built Server version
      run: 'cd quickstarts

        cd ${{ inputs.QUICKSTART_PATH }}

        mvn -fae clean package -Popenshift -Dversion.server=${{ needs.wildfly-build.outputs.wildfly-version
        }}

        '
      shell: bash
    - continue-on-error: true
      env:
        FILE: ./quickstarts/.github/workflows/quickstart_${{ inputs.QUICKSTART_PATH
          }}_ci_after.sh
      name: Run after script
      run: "if test -f $FILE;\n  then\n    chmod +x $FILE\n    bash $FILE\nfi\n"
      shell: bash
    - continue-on-error: true
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: surefire-reports-JDK${{ matrix.jdk }}-${{ matrix.os }}
        path: quickstarts/**/surefire-reports/*.txt
    strategy:
      fail-fast: false
      matrix:
        jdk: ${{ fromJSON(needs.Matrix-Setup.outputs.jdk) }}
        os: ${{ fromJSON(needs.Matrix-Setup.outputs.os) }}
  WildFly-build:
    uses: wildfly/wildfly/.github/workflows/shared-wildfly-build.yml@main
    with:
      wildfly-branch: ${{ github.base_ref }}
      wildfly-repo: wildfly/wildfly
name: WildFly Quickstart CI
on:
  repository_dispatch:
    types: trigger-ga___quickstart_ci.yml
